class PosVec: ...

class PyVecList: ...

class SelfPropelling:
    def __init__(self, pos0, vel0, propelling_cfg, size, dt, num_windows, seed=-1) -> None: ...

    n: int = ...
    pos: PosVec = ...
    vel: PosVec = ...
    propelling_vel: PosVec = ...
    propelling_angle= ...
    py_pos: PyVecList = ...
    
    py_pos: PosVec = ...
    py_vel: PosVec = ...
    py_propelling_vel: PosVec = ...

    random_number: float = ...
    superposition_count: int = ...

    def update_normal() -> None: ...
    def update_windows() -> None: ...
    def mean_vel() -> float: ...
    def mean_vel_vec() -> list: ...

class WindowsManager:
    def __init__(p_pos, num_cols, num_rows, space_size) -> None: ...

    col_size = ...
    row_size = ...
    windows = ...
    capacity = ...
    windows = ...
    windows_ids = ...
    window_neighbor = ...

    def update_window_members(): ...

class SelfPropellingCfg:
    def __init__(self, values: dict[str, float]) -> None: ...
    def info() -> None: ...